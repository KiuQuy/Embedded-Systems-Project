// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module GET_SIGNAL_control_speed (
        ap_clk,
        ap_rst,
        i_rst,
        i_weight,
        i_human_control,
        i_speed,
        i_ir_sensor,
        o_speed_control,
        o_speed_control_ap_vld,
        o_state,
        o_state_ap_vld,
        o_f_ham,
        o_f_ham_ap_vld,
        o_f_day,
        o_f_day_ap_vld,
        o_destination,
        o_destination_ap_vld
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;




input   ap_clk;
input   ap_rst;
input   i_rst;
input  [11:0] i_weight;
input   i_human_control;
input  [8:0] i_speed;
input  [4:0] i_ir_sensor;
output  [2:0] o_speed_control;
output   o_speed_control_ap_vld;
output  [2:0] o_state;
output   o_state_ap_vld;
output  [8:0] o_f_ham;
output   o_f_ham_ap_vld;
output  [8:0] o_f_day;
output   o_f_day_ap_vld;
output   o_destination;
output   o_destination_ap_vld;

reg[2:0] o_speed_control;
reg o_speed_control_ap_vld;
reg o_state_ap_vld;
reg[8:0] o_f_ham;
reg o_f_ham_ap_vld;
reg[8:0] o_f_day;
reg o_f_day_ap_vld;
reg o_destination_ap_vld;

wire   [0:0] tmp_read_fu_156_p2;
reg   [0:0] tmp_reg_320;
wire   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln895_2_fu_238_p2;
reg   [0:0] icmp_ln895_2_reg_324;
wire   [3:0] ap_phi_mux_state_0_phi_fu_201_p4;
wire   [0:0] icmp_ln895_1_fu_244_p2;
reg   [0:0] icmp_ln895_1_reg_328;
wire   [0:0] icmp_ln879_1_fu_250_p2;
reg   [0:0] icmp_ln879_1_reg_332;
wire   [0:0] icmp_ln895_3_fu_256_p2;
reg   [0:0] icmp_ln895_3_reg_336;
wire   [0:0] icmp_ln895_fu_262_p2;
reg   [0:0] icmp_ln895_reg_340;
reg   [3:0] state_0_reg_197;
wire    ap_CS_fsm_state1;
reg   [3:0] ap_phi_mux_state_0_be_phi_fu_215_p14;
wire    ap_CS_fsm_state3;
reg   [3:0] state_0_be_reg_209;
wire   [3:0] zext_ln76_fu_315_p1;
wire   [0:0] icmp_ln887_2_fu_268_p2;
wire   [0:0] icmp_ln887_1_fu_274_p2;
wire   [0:0] icmp_ln887_3_fu_280_p2;
wire   [0:0] and_ln69_fu_298_p0;
wire   [0:0] icmp_ln887_fu_286_p2;
wire   [0:0] icmp_ln879_fu_292_p2;
wire   [0:0] and_ln69_1_fu_303_p2;
wire   [0:0] and_ln69_fu_298_p2;
wire   [0:0] and_ln69_2_fu_309_p2;
reg   [2:0] ap_NS_fsm;

always @ (posedge ap_clk) begin
    if (((state_0_reg_197 == 4'd1) & (icmp_ln879_1_reg_332 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                state_0_be_reg_209[0] <= 1'b1;
        state_0_be_reg_209[3] <= 1'b0;
    end else if (((state_0_reg_197 == 4'd9) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                state_0_be_reg_209[0] <= 1'b1;
        state_0_be_reg_209[3] <= 1'b1;
    end else if (((state_0_reg_197 == 4'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                state_0_be_reg_209[0] <= zext_ln76_fu_315_p1[0];
        state_0_be_reg_209[3] <= zext_ln76_fu_315_p1[3];
    end else if ((((state_0_reg_197 == 4'd8) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln879_1_fu_250_p2 == 1'd1) & (ap_phi_mux_state_0_phi_fu_201_p4 == 4'd1) & (tmp_read_fu_156_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
                state_0_be_reg_209[0] <= 1'b0;
        state_0_be_reg_209[3] <= 1'b1;
    end else if (((~(ap_phi_mux_state_0_phi_fu_201_p4 == 4'd0) & ~(ap_phi_mux_state_0_phi_fu_201_p4 == 4'd1) & ~(ap_phi_mux_state_0_phi_fu_201_p4 == 4'd8) & ~(ap_phi_mux_state_0_phi_fu_201_p4 == 4'd9) & (tmp_read_fu_156_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_read_fu_156_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
                state_0_be_reg_209[0] <= 1'b0;
        state_0_be_reg_209[3] <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
                state_0_reg_197[0] <= ap_phi_mux_state_0_be_phi_fu_215_p14[0];
        state_0_reg_197[3] <= ap_phi_mux_state_0_be_phi_fu_215_p14[3];
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
                state_0_reg_197[0] <= 1'b0;
        state_0_reg_197[3] <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_state_0_phi_fu_201_p4 == 4'd1) & (tmp_read_fu_156_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln879_1_reg_332 <= icmp_ln879_1_fu_250_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_state_0_phi_fu_201_p4 == 4'd8) & (tmp_read_fu_156_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln895_1_reg_328 <= icmp_ln895_1_fu_244_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_state_0_phi_fu_201_p4 == 4'd9) & (tmp_read_fu_156_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln895_2_reg_324 <= icmp_ln895_2_fu_238_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_state_0_phi_fu_201_p4 == 4'd1) & (icmp_ln879_1_fu_250_p2 == 1'd0) & (tmp_read_fu_156_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln895_3_reg_336 <= icmp_ln895_3_fu_256_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_state_0_phi_fu_201_p4 == 4'd0) & (tmp_read_fu_156_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln895_reg_340 <= icmp_ln895_fu_262_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_reg_320 <= i_rst;
    end
end

always @ (*) begin
    if (((tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        if (((state_0_reg_197 == 4'd1) & (icmp_ln879_1_reg_332 == 1'd0))) begin
            ap_phi_mux_state_0_be_phi_fu_215_p14 = 4'd1;
        end else if ((state_0_reg_197 == 4'd8)) begin
            ap_phi_mux_state_0_be_phi_fu_215_p14 = 4'd8;
        end else if ((state_0_reg_197 == 4'd9)) begin
            ap_phi_mux_state_0_be_phi_fu_215_p14 = 4'd9;
        end else if ((state_0_reg_197 == 4'd0)) begin
            ap_phi_mux_state_0_be_phi_fu_215_p14 = zext_ln76_fu_315_p1;
        end else begin
            ap_phi_mux_state_0_be_phi_fu_215_p14 = state_0_be_reg_209;
        end
    end else begin
        ap_phi_mux_state_0_be_phi_fu_215_p14 = state_0_be_reg_209;
    end
end

always @ (*) begin
    if (((state_0_reg_197 == 4'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        o_destination_ap_vld = 1'b1;
    end else begin
        o_destination_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_2_fu_268_p2 == 1'd1) & (state_0_reg_197 == 4'd9) & (icmp_ln895_2_reg_324 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln887_3_fu_280_p2 == 1'd1) & (state_0_reg_197 == 4'd1) & (icmp_ln895_3_reg_336 == 1'd0) & (icmp_ln879_1_reg_332 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln887_1_fu_274_p2 == 1'd1) & (state_0_reg_197 == 4'd8) & (icmp_ln895_1_reg_328 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        o_f_day = 9'd300;
    end else if (((1'b1 == ap_CS_fsm_state2) | ((state_0_reg_197 == 4'd9) & (icmp_ln895_2_reg_324 == 1'd1) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd9) & (icmp_ln887_2_fu_268_p2 == 1'd0) & (icmp_ln895_2_reg_324 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln895_3_reg_336 == 1'd1) & (state_0_reg_197 == 4'd1) & (icmp_ln879_1_reg_332 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd1) & (icmp_ln895_3_reg_336 == 1'd0) & (icmp_ln879_1_reg_332 == 1'd0) & (icmp_ln887_3_fu_280_p2 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd8) & (icmp_ln895_1_reg_328 == 1'd1) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd8) & (icmp_ln895_1_reg_328 == 1'd0) & (icmp_ln887_1_fu_274_p2 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        o_f_day = 9'd0;
    end else begin
        o_f_day = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((state_0_reg_197 == 4'd9) & (icmp_ln895_2_reg_324 == 1'd1) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln887_2_fu_268_p2 == 1'd1) & (state_0_reg_197 == 4'd9) & (icmp_ln895_2_reg_324 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd9) & (icmp_ln887_2_fu_268_p2 == 1'd0) & (icmp_ln895_2_reg_324 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln895_3_reg_336 == 1'd1) & (state_0_reg_197 == 4'd1) & (icmp_ln879_1_reg_332 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln887_3_fu_280_p2 == 1'd1) & (state_0_reg_197 == 4'd1) & (icmp_ln895_3_reg_336 == 1'd0) & (icmp_ln879_1_reg_332 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd1) & (icmp_ln895_3_reg_336 == 1'd0) & (icmp_ln879_1_reg_332 == 1'd0) & (icmp_ln887_3_fu_280_p2 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd8) & (icmp_ln895_1_reg_328 == 1'd1) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln887_1_fu_274_p2 == 1'd1) & (state_0_reg_197 == 4'd8) & (icmp_ln895_1_reg_328 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd8) & (icmp_ln895_1_reg_328 == 1'd0) & (icmp_ln887_1_fu_274_p2 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        o_f_day_ap_vld = 1'b1;
    end else begin
        o_f_day_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((state_0_reg_197 == 4'd9) & (icmp_ln895_2_reg_324 == 1'd1) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln895_3_reg_336 == 1'd1) & (state_0_reg_197 == 4'd1) & (icmp_ln879_1_reg_332 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd8) & (icmp_ln895_1_reg_328 == 1'd1) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        o_f_ham = 9'd300;
    end else if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln887_2_fu_268_p2 == 1'd1) & (state_0_reg_197 == 4'd9) & (icmp_ln895_2_reg_324 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd9) & (icmp_ln887_2_fu_268_p2 == 1'd0) & (icmp_ln895_2_reg_324 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln887_3_fu_280_p2 == 1'd1) & (state_0_reg_197 == 4'd1) & (icmp_ln895_3_reg_336 == 1'd0) & (icmp_ln879_1_reg_332 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd1) & (icmp_ln895_3_reg_336 == 1'd0) & (icmp_ln879_1_reg_332 == 1'd0) & (icmp_ln887_3_fu_280_p2 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln887_1_fu_274_p2 == 1'd1) & (state_0_reg_197 == 4'd8) & (icmp_ln895_1_reg_328 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd8) & (icmp_ln895_1_reg_328 == 1'd0) & (icmp_ln887_1_fu_274_p2 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        o_f_ham = 9'd0;
    end else begin
        o_f_ham = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((state_0_reg_197 == 4'd9) & (icmp_ln895_2_reg_324 == 1'd1) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln887_2_fu_268_p2 == 1'd1) & (state_0_reg_197 == 4'd9) & (icmp_ln895_2_reg_324 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd9) & (icmp_ln887_2_fu_268_p2 == 1'd0) & (icmp_ln895_2_reg_324 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln895_3_reg_336 == 1'd1) & (state_0_reg_197 == 4'd1) & (icmp_ln879_1_reg_332 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln887_3_fu_280_p2 == 1'd1) & (state_0_reg_197 == 4'd1) & (icmp_ln895_3_reg_336 == 1'd0) & (icmp_ln879_1_reg_332 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd1) & (icmp_ln895_3_reg_336 == 1'd0) & (icmp_ln879_1_reg_332 == 1'd0) & (icmp_ln887_3_fu_280_p2 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd8) & (icmp_ln895_1_reg_328 == 1'd1) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln887_1_fu_274_p2 == 1'd1) & (state_0_reg_197 == 4'd8) & (icmp_ln895_1_reg_328 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd8) & (icmp_ln895_1_reg_328 == 1'd0) & (icmp_ln887_1_fu_274_p2 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        o_f_ham_ap_vld = 1'b1;
    end else begin
        o_f_ham_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_2_fu_268_p2 == 1'd1) & (state_0_reg_197 == 4'd9) & (icmp_ln895_2_reg_324 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln887_3_fu_280_p2 == 1'd1) & (state_0_reg_197 == 4'd1) & (icmp_ln895_3_reg_336 == 1'd0) & (icmp_ln879_1_reg_332 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln887_1_fu_274_p2 == 1'd1) & (state_0_reg_197 == 4'd8) & (icmp_ln895_1_reg_328 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        o_speed_control = 3'd4;
    end else if (((1'b1 == ap_CS_fsm_state2) | ((state_0_reg_197 == 4'd9) & (icmp_ln895_2_reg_324 == 1'd1) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd9) & (icmp_ln887_2_fu_268_p2 == 1'd0) & (icmp_ln895_2_reg_324 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln895_3_reg_336 == 1'd1) & (state_0_reg_197 == 4'd1) & (icmp_ln879_1_reg_332 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd1) & (icmp_ln895_3_reg_336 == 1'd0) & (icmp_ln879_1_reg_332 == 1'd0) & (icmp_ln887_3_fu_280_p2 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd8) & (icmp_ln895_1_reg_328 == 1'd1) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd8) & (icmp_ln895_1_reg_328 == 1'd0) & (icmp_ln887_1_fu_274_p2 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        o_speed_control = 3'd0;
    end else begin
        o_speed_control = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((state_0_reg_197 == 4'd9) & (icmp_ln895_2_reg_324 == 1'd1) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln887_2_fu_268_p2 == 1'd1) & (state_0_reg_197 == 4'd9) & (icmp_ln895_2_reg_324 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd9) & (icmp_ln887_2_fu_268_p2 == 1'd0) & (icmp_ln895_2_reg_324 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln895_3_reg_336 == 1'd1) & (state_0_reg_197 == 4'd1) & (icmp_ln879_1_reg_332 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln887_3_fu_280_p2 == 1'd1) & (state_0_reg_197 == 4'd1) & (icmp_ln895_3_reg_336 == 1'd0) & (icmp_ln879_1_reg_332 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd1) & (icmp_ln895_3_reg_336 == 1'd0) & (icmp_ln879_1_reg_332 == 1'd0) & (icmp_ln887_3_fu_280_p2 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd8) & (icmp_ln895_1_reg_328 == 1'd1) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln887_1_fu_274_p2 == 1'd1) & (state_0_reg_197 == 4'd8) & (icmp_ln895_1_reg_328 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((state_0_reg_197 == 4'd8) & (icmp_ln895_1_reg_328 == 1'd0) & (icmp_ln887_1_fu_274_p2 == 1'd0) & (tmp_reg_320 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        o_speed_control_ap_vld = 1'b1;
    end else begin
        o_speed_control_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        o_state_ap_vld = 1'b1;
    end else begin
        o_state_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln69_1_fu_303_p2 = (icmp_ln887_fu_286_p2 & icmp_ln879_fu_292_p2);

assign and_ln69_2_fu_309_p2 = (and_ln69_fu_298_p2 & and_ln69_1_fu_303_p2);

assign and_ln69_fu_298_p0 = i_human_control;

assign and_ln69_fu_298_p2 = (icmp_ln895_reg_340 & and_ln69_fu_298_p0);

assign ap_CS_fsm = ap_ST_fsm_state1;

assign ap_CS_fsm_state1 = ap_ST_fsm_state1[32'd0];

assign ap_CS_fsm_state2 = ap_ST_fsm_state1[32'd1];

assign ap_CS_fsm_state3 = ap_ST_fsm_state1[32'd2];

assign ap_phi_mux_state_0_phi_fu_201_p4 = state_0_reg_197;

assign icmp_ln879_1_fu_250_p2 = ((i_ir_sensor == 5'd8) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_292_p2 = ((i_ir_sensor == 5'd1) ? 1'b1 : 1'b0);

assign icmp_ln887_1_fu_274_p2 = ((i_speed < 9'd20) ? 1'b1 : 1'b0);

assign icmp_ln887_2_fu_268_p2 = ((i_speed < 9'd5) ? 1'b1 : 1'b0);

assign icmp_ln887_3_fu_280_p2 = ((i_speed < 9'd10) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_286_p2 = ((i_weight < 12'd2000) ? 1'b1 : 1'b0);

assign icmp_ln895_1_fu_244_p2 = ((i_speed > 9'd30) ? 1'b1 : 1'b0);

assign icmp_ln895_2_fu_238_p2 = ((i_speed > 9'd10) ? 1'b1 : 1'b0);

assign icmp_ln895_3_fu_256_p2 = ((i_speed > 9'd20) ? 1'b1 : 1'b0);

assign icmp_ln895_fu_262_p2 = ((i_weight > 12'd500) ? 1'b1 : 1'b0);

assign o_destination = 1'd0;

assign o_state = 3'd0;

assign tmp_read_fu_156_p2 = i_rst;

assign zext_ln76_fu_315_p1 = and_ln69_2_fu_309_p2;

always @ (posedge ap_clk) begin
    state_0_reg_197[2:1] <= 2'b00;
    state_0_be_reg_209[2:1] <= 2'b00;
end

endmodule //GET_SIGNAL_control_speed
